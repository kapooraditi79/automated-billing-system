view the mainProducts->card-like structure ✅
|
view the subProducts-> card like structure ✅
|
put the add to cart feature ✅
|
put the links to go to home, mainProducts, subProducts ✅
|



Add To Cart Feature ✅
|
the user selects a subProducts ✅
|
its id is stored in the cart ✅
|
in the randomModel ✅
|
the user can view the cart
|
the user can delete the subProducts from the cart✅
|
the user can update the quantity of the subProducts in the cart



billing system to be made
|
the user can view the total amount of the cart[including the gst]
|
the QR code must be visible.




owner password- authentication setup ✅
|
make the owner page->Login/signup/ 
|
put the add/delete/update features to the mainProducts-> only owner will access
|
put the add/delete/update features to the subProducts-> only owner will access
|
only during the development phase can owner be changed/updated



issues to be resolved:
|
the user can add the same subProducts multiple times directly from the subProducts page. 
|
out of multiple same products if the user deletes one product from the cart, only one should
be deleted
|
if a main-Product is deleted-> all its subProducts should be deleted



Authenication notes[only for the owner]:
|
jwt tokens to be used to setup cookies for the frontend
|
bcrypt is used to seut and check the passwords







      // let token = jwt.sign(
      //   { email: req.body.email, id: newOwner._id },
      //   process.env.SECRET_KEY
      // );
      // res.cookie("token", token); //setting the token in the owner's browser
      // res.status(201).send(newOwner);
